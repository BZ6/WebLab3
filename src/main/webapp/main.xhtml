<ui:composition template="/WEB-INF/templates/layout.xhtml"
                xmlns:h="jakarta.faces.html"
                xmlns:f="jakarta.faces.core"
                xmlns:ui="jakarta.faces.facelets"
                xmlns:pt="jakarta.faces.passthrough"
                xmlns:p="http://primefaces.org/ui">
    <ui:param name="title" value="Lab work #3 - Main page"/>
    <ui:define name="styles">
        <h:outputStylesheet name="styles/main.css"/>
    </ui:define>
    <ui:define name="scripts">
        <h:outputScript name="scripts/plot.js" target="body"/>
    </ui:define>
    <ui:define name="content">
        <div class="main">
            <div class="control">
                <div class="plot">
                    <canvas id="plot__canvas" width="800" height="800"/>
                </div>
                <h:form id="shot_form">
                    <div class="input-block">
                        <p:outputLabel for="x" value="X:" styleClass="input-label" indicateRequired="false"/>
                        <div class="input-group" style="display: block">
                            <h:selectOneRadio id="x" value="#{shotManager.shot.x}" flex="true" required="true">
                                <f:selectItems value="#{shotManager.availableX}" var="x"
                                               itemLabel="#{x}" itemValue="#{x}"/>
                            </h:selectOneRadio>
                        </div>
                    </div>
                    <div class="input-block">
                        <p:outputLabel for="y" value="Y:" styleClass="input-label" indicateRequired="false"/>
                        <div class="input-group">
                            <p:inputText id="y" value="#{shotManager.shot.y}" required="true"
                            styleClass="text-input" pt:placeholder="from -3.0 to 3.0"
                            pt:pattern="(?:-3|\+?3)(?:[.,]0{1,15})?|(?:-[210]|\+?[012])(?:[.,]\d{1,15})?"
                            converter="YCoordinateConverter"/>
                        </div>
                    </div>
                    <div class="input-block">
                        <p:outputLabel for="r" value="R:" styleClass="input-label" indicateRequired="false"/>

                        <div class="input-group" style="display: block">
                            <h:outputText id="r_output" value="#{shotManager.selectedR}"/>
                            <h:inputHidden id="r" value="#{shotManager.selectedR}" required="true"/>
                            <p:slider for="r" minValue="2" maxValue="5" step="0.25"
                                      display="r_output" displayTemplate="{value}" onSlideEnd="rChanged()"/>
                        </div>
                    </div>
                    <p:commandButton value="Shoot"
                                     styleClass="button"
                                     actionListener="#{shotManager.shoot()}"
                                     oncomplete="drawPlot()"
                                     update=":shot_table :msgs"/>
                    <p:remoteCommand name="shoot"
                                     actionListener="#{shotManager.shootPlot()}"
                                     immediate="true"
                                     oncomplete="drawPlot()"
                                     update=":shot_table :msgs"/>
                </h:form>
                <p:link outcome="/index" value="INDEX" style="margin-top: -20px;"/>
            </div>
            <div class="table">
                <p:dataTable id="shot_table" value="#{shotManager.shots}" var="shot" sortMode="single">
                    <p:column headerText="Id" width="50" sortBy="#{shot.id}" sortOrder="desc">
                        <h:outputText value="#{shot.id}"/>
                    </p:column>
                    <p:column headerText="Shot" width="220">
                        <h:outputText value="(#{shot.x}; #{shot.y}; #{shot.r})"/>
                    </p:column>
                    <p:column headerText="Time">
                        <h:outputText value="#{shot.shotTime}"/>
                    </p:column>
                    <p:column headerText="Result">
                        <h:outputText value="#{shot.inArea ? 'In' : 'Out'}"/>
                    </p:column>
                </p:dataTable>
            </div>
        </div>
    </ui:define>
</ui:composition>
